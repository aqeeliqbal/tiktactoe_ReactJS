{"version":3,"sources":["components/Board/Board.js","components/Buttons/Clear.js","components/DisplayMsg/DisplayMsg.js","components/Header/Header.js","App.js","reportWebVitals.js","index.js"],"names":["Board","props","boardCopy","Object","toConsumableArray","board","buttonClicked","index","checkUserWin","setBoard","setDisplayMessage","finalBoard","computerTurn","boardCpy","newBoard","placeTurn","i","length","lossValue","losses","setLosses","filled","winWays","j","winway","str","newWins","wins","setWins","react_default","a","createElement","className","onClick","Clear","setTies","DisplayMsg","displayMessage","ties","Header","App","_useState","useState","_useState2","slicedToArray","_useState3","_useState4","displayMsg","setDisplayMsg","_useState5","_useState6","_useState7","_useState8","_useState9","_useState10","components_Header_Header","components_Board_Board","components_DisplayMsg_DisplayMsg","components_Buttons_Clear","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.154a199c.chunk.js","sourcesContent":["import React, { useState } from 'react'\nimport './Board.css'\n\nconst Board = (props) => {\n    \n    var boardCopy = [...props.board]\n\n    const buttonClicked = (index) => {\n        if(props.board[index] === '_'){\n            boardCopy[index] = 'x';\n            if(checkUserWin(boardCopy)){\n                props.setBoard(boardCopy)\n                props.setDisplayMessage('YOU WON!')\n                return;\n            }\n            var finalBoard = computerTurn(boardCopy);\n            props.setBoard(finalBoard);\n        }\n    }\n    const computerTurn = (boardCpy) => {\n        var newBoard = placeTurn(boardCpy,'o');\n        if(newBoard !== null){\n            for(let i=0; i<newBoard.length; i++){\n                if(newBoard[i] === '_')\n                   newBoard[i] = '.' \n            }\n            props.setDisplayMessage('you lost!')\n            const lossValue = props.losses + 1;\n            props.setLosses(lossValue);\n            return newBoard;\n        }\n        newBoard = placeTurn(boardCpy,'x');\n        if(newBoard !== null){\n            return newBoard;\n        }\n\n        for(let i=0; i<boardCpy.length; i++){\n            if(boardCpy[i] === '_'){\n                boardCpy[i] = 'o'\n                break;\n            }\n        }\n        return boardCpy;\n        \n    }\n    const placeTurn = (boardCpy, filled) => {\n        const winWays = [[0,1,2] ,[3,4,5],[6,7,8],[0,3,6],[1,4,7],[2,5,8],[0,4,8],[2,4,6]];\n        for(let j=0; j<winWays.length; j++){\n            const winway = boardCpy[winWays[j][0]] + boardCpy[winWays[j][1]] + boardCpy[winWays[j][2]];\n            var str = '_' + filled + filled\n            if(winway === str){\n                boardCpy[winWays[j][0]] = 'o';\n                return boardCpy;\n            }\n            str = filled + '_' + filled \n            if(winway === str){\n                boardCpy[winWays[j][1]] = 'o';\n                return boardCpy;\n            }\n            str = filled + filled + '_'\n            if(winway === str){\n                boardCpy[winWays[j][2]] = 'o';\n                return boardCpy;\n            }\n        }\n        return null;\n    }\n    const checkUserWin = (boardCpy) =>{\n        const winWays = [[0,1,2] ,[3,4,5],[6,7,8],[0,3,6],[1,4,7],[2,5,8],[0,4,8],[2,4,6]];\n        for(let j=0; j<winWays.length; j++){\n            const winway = boardCpy[winWays[j][0]] + boardCpy[winWays[j][1]] + boardCpy[winWays[j][2]];\n            \n            if(winway === 'xxx'){\n                var newBoard = boardCpy;\n                for(let i=0 ; i<newBoard.length; i++){\n                    if(newBoard[i] === '_')\n                        newBoard[i] = '.'\n                }\n                var newWins = props.wins + 1;\n                props.setWins(newWins)\n                return true;\n            }\n\n        }\n        return false;\n    }\n    return (\n        <div className=\"board\">\n          <button className=\"boardBtn\" onClick={ ()=> buttonClicked(0)}>{props.board[0]}</button>     <button className = \"boardBtn\" onClick={()=>buttonClicked(1)}>{props.board[1]}</button>       <button className = \"boardBtn\" onClick={()=>buttonClicked(2)}>{props.board[2]}</button> <br/>\n          <button className=\"boardBtn\" onClick={()=>buttonClicked(3)}>{props.board[3]}</button>     <button className = \"boardBtn\" onClick={()=>buttonClicked(4)}>{props.board[4]}</button>       <button className = \"boardBtn\" onClick={()=>buttonClicked(5)}>{props.board[5]}</button> <br/>\n          <button className=\"boardBtn\" onClick={()=>buttonClicked(6)}>{props.board[6]}</button>     <button className = \"boardBtn\" onClick={()=>buttonClicked(7)}>{props.board[7]}</button>       <button className = \"boardBtn\" onClick={()=>buttonClicked(8)}>{props.board[8]}</button> <br/>\n        </div>\n      );\n}\n\nexport default Board;","import React, { useState } from 'react'\nimport './Clear.css'\n\nconst Clear = (props) => {\n    const clearScores = () =>{\n        props.setWins(0);\n        props.setTies(0);\n        props.setLosses(0);\n        props.setDisplayMessage('')\n    }\n    const clearBoard = () =>{\n        props.setBoard(['_', '_', '_', '_', '_', '_', '_', '_', '_',])\n        props.setDisplayMessage('')\n    }\n    return (\n        <center>\n            <button className=\"clear\" onClick={() => clearBoard()}>\n                Reset Board\n            </button>\n            <button className=\"clear\" onClick={() => clearScores()}>\n                Reset Scores\n            </button>\n        </center>\n      );\n}\n\nexport default Clear;","import React, { useState } from 'react'\nimport './DisplayMsg.css'\n\nconst DisplayMsg = (props) => {\n    \n    return (\n        <div className=\"displayMsg\">\n            {props.displayMessage}\n            <br/>\n            SCORE\n            <br/>\n            {props.wins} - {props.ties} - {props.losses}\n        </div>\n      );\n}\n\nexport default DisplayMsg;","import React, { useState } from 'react'\nimport './Header.css'\n\nconst Header = () => {\n    \n    return (\n        <div className=\"header\">\n            Tic Tac Toe\n        </div>\n      );\n}\n\nexport default Header;","import React, { useState } from 'react';\nimport './App.css';\nimport Board from './components/Board/Board';\nimport Clear from './components/Buttons/Clear';\nimport DisplayMsg from './components/DisplayMsg/DisplayMsg';\nimport Header from './components/Header/Header';\nfunction App() {\n  \n  const [board, setBoard] = useState(['_', '_', '_', '_', '_', '_', '_', '_', '_',])\n\n  const [displayMsg, setDisplayMsg] = useState('');\n  const [wins, setWins] = useState(0);\n  const [ties, setTies] = useState(0); \n  const [losses, setLosses] = useState(0)\n  return (\n    <div className=\"App\">\n      <Header/>\n      <Board \n        board={board} setBoard = {setBoard}\n        displayMessage={displayMsg} setDisplayMessage={setDisplayMsg} \n        wins={wins} setWins={setWins}\n        ties={ties} setTies={setTies}\n        losses={losses} setLosses={setLosses}\n      />\n      \n      <DisplayMsg displayMessage={displayMsg} \n      wins={wins}\n      ties={ties}\n      losses={losses}\n      />\n      <Clear\n        setBoard = {setBoard}\n        wins={wins} setWins={setWins}\n        ties={ties} setTies={setTies}\n        losses={losses} setLosses={setLosses}\n      />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}